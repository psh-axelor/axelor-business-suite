<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<object-views xmlns="http://axelor.com/xml/ns/object-views"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://axelor.com/xml/ns/object-views http://axelor.com/xml/ns/object-views/object-views_5.0.xsd">
    
    <grid name="stock-move-grid" title="Stock moves" model="com.axelor.apps.stock.db.StockMove" orderBy="statusSelect,-estimatedDate">
    	<toolbar>
			<button name="printStockMoveGridBtn" title="Print StockMove(s)" onClick="action-print-stock-move" icon="fa-print"/>
    	</toolbar>
    	<hilite if="statusSelect == 2 &amp;&amp; $moment(__date__).diff(estimatedDate, 'days') &gt; 0" color="danger"/>
  		<hilite if="statusSelect == 2 &amp;&amp;  $moment(estimatedDate).diff(todayDate, 'days') &lt; 10" color="warning"/>
        <field name="stockMoveSeq"/>
        <field name="fromStockLocation" form-view="stock-location-form" grid-view="stock-location-grid"/>
        <field name="toStockLocation" form-view="stock-location-form" grid-view="stock-location-grid"/>
        <field name="estimatedDate"/>
        <field name="realDate"/>
        <field name="company" form-view="company-form" grid-view="company-grid"/>
		<field name="tradingName" form-view="trading-name-form" grid-view="trading-name-grid" if="__config__.app.getApp('base').enableTradingNamesManagement"/>
        <field name="statusSelect"/>
        <field name="origin"/>
        <field name="availableStatusSelect">
        	<hilite strong="true" color="success" if="availableStatusSelect == 1"/>
        	<hilite strong="true" color="warning" if="availableStatusSelect == 2"/>
        	<hilite strong="true" color="danger" if="availableStatusSelect == 3"/>
        </field>
        <field name="typeSelect" hidden="true" />
        <field name="toAddressStr" hidden="true" form-view="address-form" grid-view="address-grid"/>
        <button name="printStockMoveBtn" title="Print" icon="fa-print" onClick="action-print-stock-move" readonlyIf="statusSelect == 1"/>
        <button name="viewDirectionBtn" icon="fa-location-arrow" onClick="action-stock-move-validate-address,action-stock-move-method-view-direction" readonlyIf="typeSelect != 2 || statusSelect == 1"/>
    </grid>
    
     <grid name="stock-move-out-grid" title="Stock moves" model="com.axelor.apps.stock.db.StockMove" orderBy="-estimatedDate">
    	<toolbar>
			<button name="printStockMoveGridBtn" title="Print StockMove(s)" onClick="action-print-stock-move" icon="fa-print"/>
			<button name="printPickingStockMoveGridBtn" title="Print Picking StockMove(s)" onClick="action-print-picking-stock-move" icon="fa-print"/>
    	</toolbar>
		<field name="stockMoveSeq">
			<hilite color="warning" strong="true" if="pickingIsEdited"/>
		</field>
        <field name="fromStockLocation" form-view="stock-location-form" grid-view="stock-location-grid"/>
        <field name="estimatedDate"/>
        <field name="realDate"/>
        <field name="fromAddressStr" hidden="true"/>
        <field name="toAddressStr"/>
        <field name="company" form-view="company-form" grid-view="company-grid"/>
		<field name="tradingName" form-view="trading-name-form" grid-view="trading-name-grid" if="__config__.app.getApp('base').enableTradingNamesManagement"/>
        <field name="partner" form-view="partner-form" grid-view="partner-grid"/>
        <field name="statusSelect"/>
        <field name="origin"/>
        <field name="availableStatusSelect">
        	<hilite strong="true" color="success" if="availableStatusSelect == 1"/>
        	<hilite strong="true" color="warning" if="availableStatusSelect == 2"/>
        	<hilite strong="true" color="danger" if="availableStatusSelect == 3"/>
        </field>
        <field name="pickingIsEdited" hidden="true" />
        <field name="typeSelect" hidden="true" />
        <button name="printStockMoveBtn" title="Print" icon="fa-print" onClick="action-print-stock-move" readonlyIf="statusSelect == 1"/>
        <button name="viewDirectionBtn" icon="fa-location-arrow" onClick="action-stock-move-validate-address,action-stock-move-method-view-direction" readonlyIf="typeSelect != 2 || statusSelect == 1"/>
    </grid>

     <grid name="stock-move-out-availability-req-grid" title="Stock moves" model="com.axelor.apps.stock.db.StockMove" orderBy="-estimatedDate">
    	<toolbar>
			<button name="printStockMoveGridBtn" title="Print StockMove(s)" onClick="action-print-stock-move" icon="fa-print"/>
			<button name="printPickingStockMoveGridBtn" title="Print Picking StockMove(s)" onClick="action-print-picking-stock-move" icon="fa-print"/>
    	</toolbar>
        <field name="stockMoveSeq">
			<hilite color="warning" strong="true" if="availabilityRequest || pickingIsEdited"/>
		</field>
        <field name="fromStockLocation" form-view="stock-location-form" grid-view="stock-location-grid"/>
        <field name="estimatedDate"/>
        <field name="realDate"/>
        <field name="fromAddressStr" hidden="true"/>
        <field name="toAddressStr"/>
        <field name="company" form-view="company-form" grid-view="company-grid"/>
		<field name="tradingName" form-view="trading-name-form" grid-view="trading-name-grid" if="__config__.app.getApp('base').enableTradingNamesManagement"/>
        <field name="partner" form-view="partner-form" grid-view="partner-grid"/>
        <field name="statusSelect"/>
        <field name="origin"/>
        <field name="availableStatusSelect">
        	<hilite strong="true" color="success" if="availableStatusSelect == 1"/>
        	<hilite strong="true" color="warning" if="availableStatusSelect == 2"/>
        	<hilite strong="true" color="danger" if="availableStatusSelect == 3"/>
        </field>
        <field name="availabilityRequest"/>
        <field name="pickingIsEdited" hidden="true" />
        <field name="typeSelect" hidden="true" />
        <button name="printStockMoveBtn" title="Print" icon="fa-print" onClick="action-print-stock-move" readonlyIf="statusSelect == 1"/>
        <button name="viewDirectionBtn" icon="fa-location-arrow" onClick="action-stock-move-validate-address,action-stock-move-method-view-direction" readonlyIf="typeSelect != 2 || statusSelect == 1"/>
    </grid>
    
    <grid name="stock-move-in-grid" title="Stock moves" model="com.axelor.apps.stock.db.StockMove" orderBy="-estimatedDate">
    	<toolbar>
			<button name="printStockMoveGridBtn" title="Print StockMove(s)" onClick="action-print-stock-move" icon="fa-print"/>
    	</toolbar>
        <field name="stockMoveSeq"/>
        <field name="toStockLocation"  form-view="stock-location-form" grid-view="stock-location-grid"/>
        <field name="estimatedDate"/>
        <field name="realDate"/>
        <field name="fromAddressStr"/>
        <field name="toAddressStr" hidden="true"/>
        <field name="company" form-view="company-form" grid-view="company-grid"/>
		<field name="tradingName" form-view="trading-name-form" grid-view="trading-name-grid" if="__config__.app.getApp('base').enableTradingNamesManagement"/>
        <field name="partner"  form-view="partner-form" grid-view="partner-grid"/>
        <field name="statusSelect"/>
        <field name="supplierShipmentRef"/>
        <field name="origin"/>
        <field name="typeSelect" hidden="true" />
        <button name="printStockMoveBtn" title="Print" icon="fa-print" onClick="action-print-stock-move" readonlyIf="statusSelect == 1"/>
        <button name="viewDirectionBtn" icon="fa-location-arrow" onClick="action-stock-move-validate-address,action-stock-move-method-view-direction" readonlyIf="typeSelect != 2 || statusSelect == 1"/>
    </grid>

    <calendar name="stock-move-calendar" model="com.axelor.apps.stock.db.StockMove" eventStart="estimatedDate"
        eventLength="24" mode="month" colorBy="statusSelect" editable="false" title="Stock moves">
        <field name="name" />
    </calendar>
    
    <form name="stock-move-customer-deliveries-form" title="Customer delivery" model="com.axelor.apps.stock.db.StockMove" width="large"
					onLoad="action-group-stock-stockmove-onload" onNew="action-group-stock-stockmove-onnew">
    	<panel-include view="stock-move-form"/>
	</form>
	
	<form name="stock-move-customer-returns-form" title="Customer return" model="com.axelor.apps.stock.db.StockMove" width="large"
					onLoad="action-group-stock-stockmove-onload" onNew="action-group-stock-stockmove-onnew">
    	<panel-include view="stock-move-form"/>
	</form>
	
	<form name="stock-move-supplier-returns-form" title="Supplier return" model="com.axelor.apps.stock.db.StockMove" width="large"
					onLoad="action-group-stock-stockmove-onload" onNew="action-group-stock-stockmove-onnew">
    	<panel-include view="stock-move-form"/>
	</form>
	
	<form name="stock-move-internal-move-form" title="Internal Stock Move" model="com.axelor.apps.stock.db.StockMove" width="large"
					onLoad="action-group-stock-stockmove-onload" onNew="action-group-stock-stockmove-onnew">
    	<panel-include view="stock-move-form"/>
	</form>
	
	
	<form name="stock-move-availability-requests-form" title="Availability request" model="com.axelor.apps.stock.db.StockMove" width="large"
					onLoad="action-group-stock-stockmove-onload" onNew="action-group-stock-stockmove-onnew">
    	<panel-include view="stock-move-form"/>
	</form>
       
       
	<form name="stock-move-supplier-arrivals-form" title="Supplier Arrival" model="com.axelor.apps.stock.db.StockMove" width="large"
					onLoad="action-group-stock-stockmove-onload" onNew="action-group-stock-stockmove-onnew">
    	<panel-include view="stock-move-form"/>
	</form>

    <form name="stock-move-form" title="Stock move" model="com.axelor.apps.stock.db.StockMove" width="large"
					onLoad="action-group-stock-stockmove-onload" onNew="action-group-stock-stockmove-onnew">
        <menubar>
            <menu title="Reports" icon="fa-files-o">
                <item title="Print Internal Move" action="save,action-print-stock-move" readonlyIf="statusSelect == 1" showIf="typeSelect == 1"/>
                <item title="Print Outgoing Move" action="save,action-print-stock-move" readonlyIf="statusSelect == 1" showIf="typeSelect == 2"/>
                <item title="Print Incoming Move" action="save,action-print-stock-move" readonlyIf="statusSelect == 1" showIf="typeSelect == 3"/>
                <item title="Print picking order" action="save,action-print-picking-stock-move" showIf="statusSelect != 1 &amp;&amp; typeSelect == 2"/>
							<item title="Print certificate of conformity"
								action="save,action-method-print-conformity-certificate"
								showIf="statusSelect != 1 &amp;&amp; isNeedingConformityCertificate"/>
            </menu>

            <menu title="Tools" icon="fa-wrench">
                <item title="View Direction" showIf="typeSelect == 2 &amp;&amp; statusSelect!=4" action="action-stock-move-validate-address,action-stock-move-method-view-direction"/>
                <item title="Split into 2" action="save,action-stock-move-split-into-2" showIf="statusSelect &lt;= 2"/>
                <item title="Split by unit" action="save,action-stock-move-method-split-stock-move-lines-unit" showIf="statusSelect &lt;= 2"/>
                <item title="Special split" action="save,action-stock-move-wizard-special-split" showIf="statusSelect &lt;= 2"/>
                <item title="Ship/Receive all products" action="save,action-stock-move-ship-recieve-all-products"/>
            </menu>
        </menubar>

        <panel name="mainPanel">
            <panel colSpan="9" name="typeSelectPanel">
                <panel name="statusPanel" itemSpan="12">
                    <field name="statusSelect" widget="NavSelect" showTitle="false"/>
                    <field name="stockMoveSeq" css="label-bold bold large" showTitle="false"/>
                </panel>

                <panel name="subTypeSelectPanel">
                	<field name="availableStatusSelect" colSpan="1" showTitle="false" readonly="true">
						<viewer><![CDATA[
                            <h4 class="text-right">
                            	<span class="label label-success" style="margin: 5px 0 !important; display: inline-table; line-height: initial;" ng-show="record.availableStatusSelect == 1" x-translate>Available</span>
                            	<span class="label label-warning" style="margin: 5px 0 !important; display: inline-table; line-height: initial;" ng-show="record.availableStatusSelect == 2" x-translate>Partially available</span>
                            	<span class="label label-important" style="margin: 5px 0 !important; display: inline-table; line-height: initial;" ng-show="record.availableStatusSelect == 3" x-translate>Unavailable</span>
                    		</h4>
						]]></viewer>
					</field>
                    <field name="$tags" showTitle="false" colSpan="11" readonly="true" showIf="$readonly()">
                        <viewer depends="typeSelect,conformitySelect,pickingIsEdited,availabilityRequest,statusSelect ">
                            <![CDATA[
                                <h4 class="text-right">
                                    <span class="label label-info" style="margin: 5px 0 !important; display: inline-table; line-height: initial;" ng-show="record.typeSelect == 1" x-translate>Internal move</span>
                                    <span class="label label-info" style="margin: 5px 0 !important; display: inline-table; line-height: initial;" ng-show="record.typeSelect == 2" x-translate>Outgoing move</span>
                                    <span class="label label-info" style="margin: 5px 0 !important; display: inline-table; line-height: initial;" ng-show="record.typeSelect == 3" x-translate>Incoming move</span>
                                    
                                    <span class="label label-success" style="margin: 5px 0 !important; display: inline-table; line-height: initial;" ng-show="record.conformitySelect == 2" x-translate>Compliant</span>
                                    <span class="label label-important" style="margin: 5px 0 !important; display: inline-table; line-height: initial;" ng-show="record.conformitySelect == 3" x-translate>Non-compliant</span>
                               		
                               		<span class="label label-warning" style="margin: 5px 0 !important; display: inline-table; line-height: initial;" ng-show="record.pickingIsEdited && record.statusSelect == 2" x-translate>Picking printed</span>
                                    <span class="label label-success" style="margin: 5px 0 !important; display: inline-table; line-height: initial;" ng-show="record.availabilityRequest && record.statusSelect == 2" x-translate>Availability request</span>
                               		
                                </h4>
                            ]]>
                        </viewer>
                    </field>

                    <field name="typeSelect" title="Type" showIf="!$readonly()" onChange="action-stock-move-attrs-set-values-typeselect-onchange,action-stock-move-set-default-stock-locations,action-stock-move-attrs-typeselect-change" readonlyIf="statusSelect != 1"/>
                    <field name="conformitySelect" showIf="statusSelect == 2" onChange="action-stock-move-method-change-conformity" />

                    <field name="cancelReason" colOffset="6" canView="false" showIf="cancelReason != null" readonly="true"/>
                    <field name="isReversion" hidden="true" />
                </panel>
            </panel>

            <panel name="actionPanel" colSpan="3" itemSpan="12">
                <button name="planBtn" title="Plan" icon="fa-calendar" showIf="statusSelect == 1" onClick="action-group-stock-stockmove-plan-click"/>
                <button name="realizeBtn" title="Realize" icon="fa-check" showIf="statusSelect == 2" prompt="Are you sure you want to realize this stock move?" onClick="action-group-stock-stockmove-realize-click"/>
                <button name="generateInvoiceBtn" title="Generate invoice" icon="fa-file-o" onClick="save,action-supplychain-stock-move-method-generate-invoice" if-module="axelor-supplychain" showIf="statusSelect == 3 &amp;&amp; typeSelect &gt; 1" if="__config__.app.isApp('supplychain') &amp;&amp; __config__.app.getApp('supplychain').getGenerateInvoiceFromStockMove()"/>
                <button name="generateReversionBtn" title="Generate reversion" icon="fa-undo" onClick="save,action-stock-move-method-generate-reversion" showIf="statusSelect == 3 &amp;&amp; !isReversion"/>
                <button name="cancelBtn" title="Cancel" icon="fa-times-circle" css="btn-danger" showIf="id != null &amp;&amp; statusSelect &gt; 1 &amp;&amp; statusSelect &lt; 4" onClick="action.stock.move.view.cancel"/>
                <button name="draftBtn" title="Draft" showIf="statusSelect == 4" onClick="action-group-stock-stockmove-draft-click"/>
            </panel>
        </panel>

        <panel name="stockMoveInformationPanel" title="Stock move information">
            <field name="company" readonlyIf="statusSelect != 1" onChange="action-stock-move-record-update-info-company" canEdit="false" grid-view="company-grid" form-view="company-form"/>
            <field name="partner" canEdit="false" domain="self.isContact = false AND :company member of self.companySet" readonlyIf="statusSelect != 1" onChange="action-stock-move-group-partner-onchange" grid-view="partner-grid" form-view="partner-form" hideIf="typeSelect == 1"/>
            <field name="name" readonlyIf="statusSelect == 3 || statusSelect == 4"/>
            <field name="tradingName" readonlyIf="statusSelect != 1" domain=":company MEMBER OF self.companySet" onChange="action-stock-move-method-printing-settings-default-value" canEdit="false" if="__config__.app.getApp('base').enableTradingNamesManagement" grid-view="trading-name-grid" form-view="trading-name-form"/>
            <spacer name="tradingNameSpacer" if="!__config__.app.getApp('base').enableTradingNamesManagement"/>

            <field name="fromStockLocation" canEdit="false" domain="self.company = :company" onChange="action-stock-move-group-from-location-onchange" readonlyIf="statusSelect != 1" grid-view="stock-location-grid" form-view="stock-location-form"/>
            <field name="toStockLocation" canEdit="false" domain="self.company = :company" onChange="action-stock-move-group-to-location-onchange" readonlyIf="statusSelect != 1" grid-view="stock-location-grid" form-view="stock-location-form"/>

            <field name="fromStockLocation.address" showIf="typeSelect == 1"/>
            <field name="toStockLocation.address" showIf="typeSelect == 1"/>
			
			<panel name="datesPanel" colSpan="6">
				<field name="estimatedDate" readonlyIf="statusSelect != 1" colSpan="4"/>
	            <field name="realDate" colSpan="4"/>
	            <field name="reservationDateTime" colSpan="4" if="(__config__.app.isApp('supplychain') &amp;&amp; __config__.app.getApp('supplychain')?.getManageStockReservation())"/>
			</panel>

            <panel name="addressPanel" stacked="true">
                <field name="fromAddress" showIf="!$readonly() &amp;&amp; statusSelect &lt; 3 &amp;&amp; typeSelect == 3" onSelect="action-stock-move-attrs-domain-address" onChange="action-stock-move-method-set-addresses-str" readonlyIf="statusSelect == 3 || statusSelect == 4" form-view="address-partner-address-form"/>
                <field name="fromAddressStr" showIf="typeSelect == 3" readonlyIf="statusSelect &gt; 2" height="3">
                    <viewer>{{record.fromAddressStr}}</viewer>
                </field>

                <field name="toAddress" showIf="!$readonly() &amp;&amp; statusSelect &lt; 3 &amp;&amp; typeSelect == 2" onSelect="action-stock-move-attrs-domain-address" onChange="action-stock-move-method-set-addresses-str,action-stock-move-record-ispm-field" readonlyIf="statusSelect == 3 || statusSelect == 4" form-view="address-partner-address-form"/>
                <field name="toAddressStr" showIf="typeSelect == 2" readonlyIf="statusSelect &gt; 2" height="3">
                    <viewer>{{record.toAddressStr}}</viewer>
                </field>
            </panel>
            <field name="filterOnAvailableProducts" widget="boolean-switch" onChange="action-stock-move-method-update-stock-move-line"/>
			<panel name="shipmentInformationsPanel" title="Shipment Informations" showIf="typeSelect == 3 &amp;&amp; !isReversion" >
					<field name="supplierShipmentDate"/>
					<field name="supplierShipmentRef"/>
			</panel>
			<panel name="ShipmentOperationsInformations" colSpan="12">
				<field name="pickingIsEdited"  widget="boolean-switch" if="__config__.app.getApp('stock').isSeparateShipmentOperations" showIf="!isReversion &amp;&amp; typeSelect==2  &amp;&amp; statusSelect == 2" readonlyIf="_userType == null || statusSelect==3 || _userType == 'Salesperson'" onChange="action-stock-move-picking-is-edited-onchange"/>
				<field name="availabilityRequest"  widget="boolean-switch" if="__config__.app.getApp('stock').isSeparateShipmentOperations" showIf="!isReversion &amp;&amp; typeSelect==2  &amp;&amp; statusSelect == 2" readonlyIf="_userType == null || statusSelect==3 || _userType == 'Sender' || ( pickingIsEdited &amp;&amp; availabilityRequest)" />
           		<field name="pickingEditDate" showIf="pickingEditDate" readonly="true"/>
            </panel>
            <spacer/>
            <field name="exTaxTotal" css="order-subtotal" showIf="id" readonly="true" showTitle="false">
                <viewer>
                    <![CDATA[
                        <dl class="dl-horizontal" style="float: none;">
                            <br>
                            <dt class="order-subtotal-total" style="border-top: none; text-align: left;" x-translate>Total W.T.</dt>
                            <dd class="order-subtotal-total" style="border-top: none; text-align: left;">{{record.exTaxTotal}}</dd>
                        </dl>
                    ]]>
                </viewer>
            </field>
        </panel>

        <panel-tabs name="mainPanelTab">
            <panel name="stockMoveLineListPanel" title="Stock move lines" itemSpan="12" readonlyIf="company == null || fromStockLocation == null">
              <panel-related name="stockMoveLineList1Panel" field="stockMoveLineList" height="6" onChange="action-stock-move-line-change-group" readonlyIf="statusSelect == 3" grid-view="stock-move-line-grid" form-view="stock-move-line-form" canMove="true" orderBy="sequence" showIf="statusSelect != 2"/>
              <panel-related name="stockMoveLineList2Panel" field="stockMoveLineList" height="6" onChange="action-stock-move-line-change-group" onNew="action-stock-move-line-record-filter-on-available-products" readonlyIf="statusSelect == 3" grid-view="stock-move-line-planned-grid" form-view="stock-move-line-form" canMove="true" orderBy="sequence" showIf="statusSelect == 2"/>
            </panel>
            <panel name="freightCarrierPanel" title="Freight Carrier">
                <field name="shipmentMode" canEdit="false" form-view="shipment-mode-grid" grid-view="shipment-mode-grid" />
				<field name="freightCarrierMode" canEdit="false" domain="self.shipmentMode = :shipmentMode"  form-view="freight-carrier-mode-form" grid-view="freight-carrier-mode-grid" onChange="action-stock-move-record-freight-carrier" />
                <field name="carrierPartner" domain="self.isCarrier = TRUE AND (self.companySet IS EMPTY OR :company MEMBER OF self.companySet)" form-view="partner-form" grid-view="partner-grid" canEdit="false"/>
            	<field name="forwarderPartner" domain=":company MEMBER OF self.companySet" form-view="partner-form" grid-view="partner-grid" canEdit="false" />
            	<field name="incoterm" form-view="incoterm-form" grid-view="incoterm-grid" canEdit="false" />
                
                <field name="trackingNumber" colSpan="4"/>
                <field name="$deliveryCondition" type="string" title="Delivery conditions" readonly="true" colSpan="6" showIf="typeSelect == 2 &amp;&amp; originTypeSelect &amp;&amp; originTypeSelect=='com.axelor.apps.sale.db.SaleOrder'"/>
                <spacer name="deliveryConditionSpacer" colSpan="6" showIf="typeSelect == 2"/>

                <field name="numOfPackages" readonlyIf="statusSelect == 3 || statusSelect == 4" colSpan="4"/>
                <field name="numOfPalettes" readonlyIf="statusSelect == 3 || statusSelect == 4" colSpan="4"/>
                <field name="grossMass" readonlyIf="statusSelect == 3 || statusSelect == 4" colSpan="4"/>

                <field name="specificPackage" readonly="true" colSpan="12" showIf="specificPackage" if-module="axelor-supplychain" if="__config__.app.isApp('supplychain')"/>
                <panel name="freightDetailPanel" stacked="true" colSpan="8">
                    <field name="isIspmRequired" showIf="!$readonly()"/>
                    <field name="$IspmTag" showTitle="false" showIf="$readonly()">
                        <viewer>
                            <![CDATA[
                                <h4 class="text-left">
                                    <span class="label label-important" style="margin: 5px 0 !important; display: inline-table; line-height: initial;" ng-show="record.isIspmRequired" x-translate>ISPM standard required</span>
                                </h4>
                            ]]>
                        </viewer>
                    </field>
                </panel>
				<field name="isNeedingConformityCertificate" onChange="action-stock-move-record-unset-certificate-signed"/>
				<field name="signatoryUser" canEdit="false" />
				<field name="isConformityCertifSigned" showIf="isNeedingConformityCertificate" onChange="action-stock-move-record-is-conformity-certif-signed-onchange"/>
				<field name="electronicSignature" showIf="isConformityCertifSigned" widget="Image"/>

              <field name="modeOfTransport" />
            </panel>
			<panel name="logisticalFormsPanel" title="Logistical forms" showIf="id &amp;&amp; typeSelect == 2">
				<field name="fullySpreadOverLogisticalFormsFlag"/>
	            <panel-dashlet name="logisticalFormsListPanel" action="action-stock-move-view-logistical-forms" title="Logistical forms" colSpan="12"/>
			</panel>
            <panel name="automaticMailPanel" title="Automatic mail" showIf="typeSelect == 2">
              <panel name="plannedStockMovePanel" colSpan="12">
                <field name="plannedStockMoveAutomaticMail" readonlyIf="statusSelect == 3"/>
                <field name="plannedStockMoveMessageTemplate" readonlyIf="statusSelect == 3" requiredIf="plannedStockMoveAutomaticMail" showIf="plannedStockMoveAutomaticMail" grid-view="template-grid" form-view="template-form"/>
              </panel>
              <panel name="realStockMovePanel" colSpan="12">
                <field name="realStockMoveAutomaticMail"/>
                <field name="realStockMoveMessageTemplate" requiredIf="realStockMoveAutomaticMail" showIf="realStockMoveAutomaticMail" grid-view="template-grid" form-view="template-form"/>
              </panel>
            </panel>
            <panel name="notePanel" title="Note" colSpan="12">
        		<field name="note" widget="Html" x-lite="true" colSpan="12" showTitle="false"/>
            </panel>
            <panel name="linksPanel" title="Links" if-module="axelor-supplychain" if="__config__.app.isApp('supplychain')" showIf="id">
            	<field name="originTypeSelect" title="Origin" widget="RefSelect" x-related="originId" readonly="true"/>
                <field name="invoice" readonlyIf="statusSelect != 1" grid-view="invoice-grid" form-view="invoice-form" canEdit="false"/>
                <panel-dashlet name="viewAccountMovesPanel" action="action-stock-move-view-account-moves" colSpan="12" title="Moves" if-module="axelor-supplychain"/>
            </panel>
            <panel name="configPanel" title="Configuration">
            	<field name="isWithReturnSurplus" showIf="typeSelect == 3" colSpan="3"/>
            	<field name="isWithBackorder" colSpan="3"/>
                <field name="printingSettings" onSelect="action-stock-move-method-filter-printing-settings" canEdit="false"/>
                <field name="$reservedQtyChanged" type="boolean" hidden="true"/>
            </panel>
            <panel name="stockCorrectionReasonPanel" showIf="stockCorrectionReason">
				<field name="stockCorrectionReason"/>
	        </panel>
        </panel-tabs>
        <panel-mail name="mailPanel">
	    	<mail-messages limit="4"/>
	    	<mail-followers/>
	  	</panel-mail>
    </form>

	<form name="popup-stock-move-backorder-form" title="Manage backorder?" model="com.axelor.apps.stock.db.StockMove" width="large">
		<panel name="mainPanel" colSpan="12">
			<field name="$msg" showTitle="false" colOffset="3" colSpan="6" readonly="true">
				<viewer depends="typeSelect,fromStockLocation.typeSelect">
					<![CDATA[
            <h5 class="text-left">
              <span ng-show="record.typeSelect == 2 || (record.typeSelect == 1 &amp;&amp; record.fromStockLocation.typeSelect == 1)" x-translate>Do you want to generate backorder for not delivered quantities?</span>
              <span ng-show="record.typeSelect == 3 || (record.typeSelect == 1 &amp;&amp; record.fromStockLocation.typeSelect == 3)" x-translate>Do you want to generate backorder for not received quantities?</span>
            </h5>
          ]]>
				</viewer>
			</field>

      <button name="yesBtn" title="Yes" onClick="action-stock-move-popup-backorder-record-set-backorder,save,action-stock-move-method-realize,close" icon="fa-check" colOffset="3" colSpan="3"/>
      <button name="noBtn" title="No" onClick="action-stock-move-method-realize,close" icon="fa-times" css="btn-danger" colSpan="3"/>

      <field name="typeSelect" hidden="true"/>
      <field name="fromStockLocation" hidden="true"/>
      <field name="isWithBackorder" hidden="true"/>
		</panel>
	</form>

	<action-record name="action-stock-move-popup-backorder-record-set-backorder" model="com.axelor.apps.stock.db.StockMove">
		<field name="isWithBackorder" expr="true"/>
	</action-record>

    <form name="stock-move-wizard-special-split-form" title="Special split" model="com.axelor.apps.base.db.Wizard">
    	<panel name="mainPanel" colSpan="12">
	        <field name="splitQty" type="decimal" widget="Decimal" title="Split in Qty of" x-scale="2" x-precision="18" colSpan="6"/>
	        <button name="splitBtn" title="Split" onClick="action-stock-move-method-split-stock-move-lines-special" colSpan="6"/>
        </panel>
    </form>
    
    <form name="stock-move-wizard-stock-per-day" title="Stock Availability" model="com.axelor.apps.base.db.Wizard" 
    	 canSave="false" canDelete="false" canCopy="false" canAttach="false" canNew="false"
    	 onNew="action-stock-move-wizard-stock-per-day-defaults">
    	<toolbar>
    		<button icon="img/16px/create_16px.png" name="runWizardBtn" title="Run" onClick="action-stock-move-method-open-stock-per-day" readonlyIf="stockFromDate == null || stockToDate == null || stockLocation == null" />
    	</toolbar>
    	<panel name="mainPanel">
    		<field name="stockFromDate" title="From Date" type="date" required="true"/>
    		<field name="stockToDate" title="To Date" type="date" required="true"/>
	        <field name="stockLocation" title="Stock location" type="many-to-one" target="com.axelor.apps.stock.db.StockLocation" required="true" />
	        <field name="productSet" title="Products" type="many-to-many" target="com.axelor.apps.base.db.Product" colSpan="12" canEdit="false"/>
        </panel>
    </form>
    
    <action-view title="Special split" model="com.axelor.apps.base.db.Wizard" name="action-stock-move-wizard-special-split">
	    <view type="form" name="stock-move-wizard-special-split-form"/>
	    <view-param name="popup" value="reload"/>
        <view-param name="forceEdit" value="true"/>
        <view-param name="show-toolbar" value="false"/>
	    <view-param name="show-confirm" value="false" />
   	  	<view-param name="popup-save" value="false"/>
	    <view-param name="width" value="800" />
	    <context name="stockMoveLineList" expr="eval:stockMoveLineList.findAll{ it.selected }" if="stockMoveLineList != null" />
	    <context name="stockMove" expr="eval: __this__"/>
	</action-view>
	
	<form name="stock-move-split-into-2-form" title="Split into 2" model="com.axelor.apps.stock.db.StockMove" width="large">
    	<panel name="mainPanel">
	        <panel-related name="stockMoveLineListPanel" field="stockMoveLineList" colSpan="12" grid-view="stock-move-line-split-grid" canEdit="true" form-view="stock-move-line-form"/>
	        <button name="splitBtn" title="Split" onClick="action-stock-move-method-split-into-2"/>
        </panel>
    </form>
    
    <action-method name="action-stock-move-method-add-subline">
    	<call class="com.axelor.apps.supplychain.web.StockMoveController" method="addSubLines"/>
    </action-method>
    
    <action-method name="action-stock-move-method-remove-subline">
    	<call class="com.axelor.apps.supplychain.web.StockMoveController" method="removeSubLines"/>
    </action-method>
    
    <action-method name="action-stock-move-method-compute">
    	<call class="com.axelor.apps.stock.web.StockMoveController" method="compute"/>
    </action-method>
    
    <action-method name="action-stock-move-method-set-available-status">
    	<call class="com.axelor.apps.stock.web.StockMoveController" method="setAvailableStatus"/>
    </action-method>
    
    <action-method name="action-stock-move-method-update-stock-move-line">
      <call class="com.axelor.apps.stock.web.StockMoveController" method="updateMoveLineFilterOnAvailableproduct"/>
    </action-method>
    
    <action-view title="Split into 2" model="com.axelor.apps.stock.db.StockMove" name="action-stock-move-split-into-2">
	    <view type="form" name="stock-move-split-into-2-form"/>
	    <view-param name="popup" value="reload"/>
	    <view-param name="forceEdit" value="true"/> 
	    <view-param name="show-toolbar" value="false"/>
	    <view-param name="show-confirm" value="false" />
   	  	<view-param name="popup-save" value="false"/>
	    <view-param name="width" value="200" />
	    <context name="_showRecord" expr="eval: __this__.id" />
	</action-view>
	
    <!-- <action-attrs name="action-stock-move-attrs-title-realize-button">
    	<attribute name="title" for="realize" expr="eval: (fromStockLocation) ? ((fromStockLocation?.typeSelect != 1 &amp;&amp; toStockLocation?.typeSelect == 1) ? 'Receive' : 'Send') : ((toStockLocation?.typeSelect == 1) ? 'Receive' : 'Send')"/>
    </action-attrs> -->
    
    <action-group name="action-group-stock-stockmove-onnew">
    	<action name="action-stock-move-record-new"/>
    	<action name="action-stock-move-attrs-typeselect-change"/>
        <action name="action-stock-move-generate-invoice-button"/>
		<action name="action-stock-move-hide-reserved-qty"/>
    </action-group>

    <action-group name="action-group-stock-stockmove-onload">
        <action name="action-stock-move-attrs-typeselect-change"/>
        <action name="action-stock-move-generate-invoice-button"/>
        <action name="action-stock-move-hide-reserved-qty"/>
        <action name="action-stock-move-attrs-set-required-shipment-supplier-details"/>
    </action-group>
    
    <action-group name="action-stock-move-line-change-group">
    	<action name="action-stock-move-method-remove-subline"/>
    	<action name="save" if="stockMoveLineList.find{it->it.lineTypeSelect == 2 &amp;&amp; (it.version != null || it.id == null)} != null" />
    	<action name="action-stock-move-method-add-subline"/>
    	<action name="action-stock-move-method-compute"/>
    	<action name="action-stock-move-line-method-change-conformity"/>
    	<action name="action-stock-move-method-set-available-status"/>
    </action-group>
    
	<action-group name="action-group-stock-stockmove-plan-click">
	 	<action name="save"/>
	  	<action name="action-stock-move-method-plan"/>
	  	<action name="save"/>
	</action-group>
    
	<action-group name="action-group-stock-stockmove-realize-click">
	  	<action name="save"/>
    	<action name="action-stock-move-check-stock-move-line-real-qty"/>
    	<action name="action-stock-move-validate-shipment-informations" if="typeSelect == __repo__(StockMove).TYPE_INCOMING &amp;&amp; !isReversion"/>
	    <action name="action-stock-move-method-manage-backorder" if="stockMoveLineList.any{it?.realQty.compareTo(it?.qty) != 0} &amp;&amp; !isWithBackorder"/> <!-- first condition = is it necessary to split SM -->
	    <action name="action-stock-move-method-realize" if="!stockMoveLineList.any{it?.realQty.compareTo(it?.qty) != 0} || isWithBackorder"/>
    	<action name="save"/>
	</action-group>

  <action-method name="action-stock-move-method-manage-backorder">
    <call class="com.axelor.apps.stock.web.StockMoveController" method="manageBackorder"/>
  </action-method>

  	<action-group name="action-group-stock-stockmove-draft-click">
	  	<action name="save"/>
    	<action name="action-stock-move-record-draft"/>
    	<action name="save"/>
  	</action-group>

	<action-group name="action-stock-move-group-to-location-onchange">
		<action name="action-stock-move-set-to-address"/>
        <action name="action-stock-move-method-set-addresses-str"/>
	</action-group>

	<action-group name="action-stock-move-group-from-location-onchange">
		<action name="action-stock-move-set-from-address"/>
		<action name="action-stock-move-method-set-addresses-str"/>
		<action name="action-stock-move-hide-reserved-qty"/>
	</action-group>

	<action-group name="action-stock-move-group-partner-onchange">
		<action name="action-stock-move-record-partner-delivery-informations"/>
        <action name="action-stock-move-record-auto-mail"/>
		<action name="action-stock-move-record-ispm-field"/>
	   	<action name="action-stock-move-record-partner-shipment-informations"/>
	</action-group>

     <action-attrs name="action-stock-move-attrs-typeselect-change">
    	<attribute name="title" for="stockMoveInformationPanel" expr="eval: com.axelor.i18n.I18n.get('Internal move information')" if="typeSelect == 1"/>
    	<attribute name="title" for="stockMoveInformationPanel" expr="eval: com.axelor.i18n.I18n.get('Outgoing move information')" if="typeSelect == 2"/>
    	<attribute name="title" for="stockMoveInformationPanel" expr="eval: com.axelor.i18n.I18n.get('Incoming move information')" if="typeSelect == 3"/>
    	<attribute name="title" for="stockMoveLineList" expr="eval: com.axelor.i18n.I18n.get('Internal move lines')" if="typeSelect == 1"/>
    	<attribute name="title" for="stockMoveLineList" expr="eval: com.axelor.i18n.I18n.get('Outgoing move lines')" if="typeSelect == 2"/>
    	<attribute name="title" for="stockMoveLineList" expr="eval: com.axelor.i18n.I18n.get('Incoming move lines')" if="typeSelect == 3"/>
    </action-attrs>
	
	<action-attrs name="action-stock-move-attrs-set-values-typeselect-onchange">
		<attribute name="value" for="isWithBackorder" expr="eval:company?.stockConfig?.isWithBackorder" if="company != null"/>
    	<attribute name="value" for="isWithReturnSurplus" expr="eval:company?.stockConfig?.isWithReturnSurplus" if="company != null &amp;&amp; typeSelect == 3"/>
    	<attribute name="value" for="isWithReturnSurplus" expr="eval:false" if="typeSelect != 3"/>
	</action-attrs>
	
	<action-attrs name="action-stock-move-attrs-set-required-shipment-supplier-details">
		<attribute name="required" for="supplierShipmentRef" expr="eval: __config__.app.getApp('stock').isRequiredShipmentSupplierDetails &amp;&amp; statusSelect == 3 &amp;&amp; typeSelect == 3 &amp;&amp; !isReversion"/>
		<attribute name="required" for="supplierShipmentDate" expr="eval: __config__.app.getApp('stock').isRequiredShipmentSupplierDetails &amp;&amp; statusSelect == 3 &amp;&amp; typeSelect == 3 &amp;&amp; !isReversion"/>
		<attribute name="value" for="$deliveryCondition" expr="eval: __repo__(SaleOrder).all().filter('self.saleOrderSeq LIKE ?',origin).fetchOne()?.deliveryCondition" if="origin !=null &amp;&amp; originTypeSelect!=null &amp;&amp; originTypeSelect=='com.axelor.apps.sale.db.SaleOrder'"/>
	</action-attrs>

    <action-attrs name="action-stock-move-generate-invoice-button">
        <attribute name="title" for="generateInvoiceBtn" expr="eval: com.axelor.i18n.I18n.get('Generate refund')"
            if="isReversion" />
    </action-attrs>

    <action-attrs name="action-stock-move-attrs-domain-address">
		<attribute name="domain" for="fromAddress" expr="eval: &quot;self.id IN (${(partner?.partnerAddressList?.findAll{it.isDeliveryAddr}.collect{it.address.id}+[null]).join(',')})&quot;" />
		<attribute name="domain" for="toAddress" expr="eval: &quot;self.id IN (${(partner?.partnerAddressList?.findAll{it.isDeliveryAddr}.collect{it.address.id}+[null]).join(',')})&quot;" />
    </action-attrs>
    
    <action-attrs name="action-stock-move-wizard-stock-per-day-defaults">
    	<attribute name="value" for="stockFromDate" expr="eval:__date__"/>
    	<attribute name="value" for="stockToDate" expr="eval:__date__"/>
    </action-attrs>
	
	<action-attrs name="action-stock-move-hide-reserved-qty">
        <attribute for="stockMoveLineList.reservedQty" name="hidden" expr="eval: typeSelect != 2"/>
        <attribute name="hidden" for="stockMoveLineList.availableStatus" expr="eval: typeSelect == 3"/>
	</action-attrs>

    <action-record name="action-stock-move-record-draft" model="com.axelor.apps.stock.db.StockMove">
    	<field name="statusSelect" expr="eval: 1"/>
    </action-record>
    
    <action-record name="action-stock-move-record-new" model="com.axelor.apps.stock.db.StockMove">
        <field name="company"  expr="eval:__user__.activeCompany" if="__user__.activeCompany != null"/>
    	<field name="company"  expr="eval:__repo__(Company).all().fetchOne()" if="__user__.activeCompany == null &amp;&amp; __repo__(Company).all().fetch().size == 1"/>
	    <field name="statusSelect" expr="eval: 1"/>
	    <field name="estimatedDate" expr="eval:__config__.app.getTodayDate()"/>
	    <field name="typeSelect" expr="eval: _typeSelect"/>
	    <field if="_typeSelect == __repo__(StockMove).TYPE_INCOMING" name="toStockLocation" expr="eval:__repo__(StockConfig).all().filter('company.id = ?',__user__.activeCompany?.id).fetchOne()?.receiptDefaultStockLocation"/>
	    <field if="_typeSelect == __repo__(StockMove).TYPE_INCOMING" name="fromStockLocation" expr="eval:__repo__(StockConfig).all().filter('company.id = ?',__user__.activeCompany?.id).fetchOne()?.supplierVirtualStockLocation"/>
	    <field if="_typeSelect == __repo__(StockMove).TYPE_OUTGOING" name="fromStockLocation" expr="eval:__repo__(StockConfig).all().filter('company.id = ?',__user__.activeCompany?.id).fetchOne()?.pickupDefaultStockLocation"/>
	    <field if="_typeSelect == __repo__(StockMove).TYPE_OUTGOING" name="toStockLocation" expr="eval:__repo__(StockConfig).all().filter('company.id = ?',__user__.activeCompany?.id).fetchOne()?.customerVirtualStockLocation"/>
	    <field name="printingSettings" expr="eval: __user__.activeCompany?.printingSettings" if="__user__.activeCompany != null"/>
	    <field name="isWithBackorder" expr="eval:__repo__(StockConfig).all().filter('company.id = ?',__user__.activeCompany?.id).fetchOne()?.isWithBackorder"  if="__user__.activeCompany != null"/>
	    <field name="isWithReturnSurplus" expr="eval:__repo__(StockConfig).all().filter('company.id = ?',__user__.activeCompany?.id).fetchOne()?.isWithReturnSurplus" if="__user__.activeCompany != null &amp;&amp; _typeSelect == 3"/>
	    <field name="isWithReturnSurplus" expr="eval:false" if="_typeSelect != 3"/>
	    <field name="_userType" expr="eval: _userType" />
      <!-- force boolean conversion -->
	    <field name="isReversion" expr="eval: _isReversion ?: false"/>
	</action-record>

	<action-record name="action-stock-move-record-auto-mail" model="com.axelor.apps.stock.db.StockMove">
    <field name="plannedStockMoveAutomaticMail" if="_typeSelect == '2' || typeSelect == 2"
      expr="eval: partner?.partnerStockSettingsList?.find{it.company == company}?.plannedStockMoveAutomaticMail"/>
    <field name="plannedStockMoveMessageTemplate" if="_typeSelect == '2' || typeSelect == 2"
      expr="eval: partner?.partnerStockSettingsList?.find{it.company == company}?.plannedStockMoveMessageTemplate"/>
		<field name="realStockMoveAutomaticMail" if="_typeSelect == '2' || typeSelect == 2"
			   expr="eval: partner?.partnerStockSettingsList?.find{it.company == company}?.realStockMoveAutomaticMail"/>
		<field name="realStockMoveMessageTemplate" if="_typeSelect == '2' || typeSelect == 2"
			   expr="eval: partner?.partnerStockSettingsList?.find{it.company == company}?.realStockMoveMessageTemplate"/>
	</action-record>
	
	<action-record name="action-stock-move-record-ispm-field" model="com.axelor.apps.stock.db.StockMove">
		<field name="isIspmRequired" expr="eval: partner?.isIspmRequired || toAddress?.addressL7Country?.isIspmRequired"/>
	</action-record>

	<action-record name="action-stock-move-set-from-address" model="com.axelor.apps.stock.db.StockMove">
		<field name="fromAddress" expr="eval:fromStockLocation?.address" />
	</action-record>
	
	<action-record name="action-stock-move-set-to-address" model="com.axelor.apps.stock.db.StockMove">
		<field name="toAddress" expr="eval:toStockLocation?.address" />
	</action-record>
	
	<action-record name="action-stock-move-set-default-stock-locations" model="com.axelor.apps.stock.db.StockMove">
	    <field if="_typeSelect == __repo__(StockMove).TYPE_OUTGOING" name="fromStockLocation" expr="eval:__repo__(StockConfig).all().filter('company.id = ?',company != null ? company.id : __user__.activeCompany?.id).fetchOne()?.pickupDefaultStockLocation"/>
	    <field if="_typeSelect == __repo__(StockMove).TYPE_OUTGOING" name="toStockLocation" expr="eval:__repo__(StockConfig).all().filter('company.id = ?',company != null ? company.id : __user__.activeCompany?.id).fetchOne()?.customerVirtualStockLocation"/>
	    <field if="_typeSelect == __repo__(StockMove).TYPE_INCOMING" name="toStockLocation" expr="eval:__repo__(StockConfig).all().filter('company.id = ?',company != null ? company.id : __user__.activeCompany?.id).fetchOne()?.receiptDefaultStockLocation"/>
	    <field if="_typeSelect == __repo__(StockMove).TYPE_INCOMING" name="fromStockLocation" expr="eval:__repo__(StockConfig).all().filter('company.id = ?',company != null ? company.id : __user__.activeCompany?.id).fetchOne()?.supplierVirtualStockLocation"/>
	</action-record>
	
	<action-record name="action-stock-move-record-partner-delivery-informations" model="com.axelor.apps.stock.db.StockMove">
    	<field name="shipmentMode" expr="eval: partner?.shipmentMode"/>	
    	<field name="freightCarrierMode" expr="eval: partner?.freightCarrierMode"/>
	</action-record>

	<action-record name="action-stock-move-record-is-conformity-certif-signed-onchange" model="com.axelor.apps.stock.db.StockMove">
		<field name="electronicSignature" if="!signatoryUser" expr="eval: (__user__?.useSignatureForStock &amp;&amp; isConformityCertifSigned) ? __user__.electronicSignature : null"/>
		<field name="electronicSignature" if="signatoryUser" expr="eval: (signatoryUser?.useSignatureForStock &amp;&amp; isConformityCertifSigned) ? signatoryUser.electronicSignature : null"/>
    <field name="signatoryUser" if="isConformityCertifSigned &amp;&amp; !signatoryUser" expr="eval: __user__"/>
	</action-record>
	
	<action-record name="action-stock-move-picking-is-edited-onchange" model="com.axelor.apps.stock.db.StockMove">
		<field name="pickingEditDate" if="pickingIsEdited" expr="eval: __date__"/>
	</action-record>

	<action-record name="action-stock-move-record-unset-certificate-signed" model="com.axelor.apps.stock.db.StockMove">
		<field name="isConformityCertifSigned" if="!isNeedingConformityCertificate" expr="eval: false"/>
		<field name="electronicSignature" if="!isNeedingConformityCertificate" expr="eval:null"/>
	</action-record>
	
	<action-method name="action-stock-move-method-plan">
		<call class="com.axelor.apps.stock.web.StockMoveController" method="plan"/>
	</action-method>
	
	<action-method name="action-stock-move-method-realize">
		<call class="com.axelor.apps.stock.web.StockMoveController" method="realize"/>
	</action-method>
	
	<action-method name="action-stock-move-method-cancel">
		<call class="com.axelor.apps.stock.web.StockMoveController" method="cancel"/>
	</action-method>
	
	<action-method name="action-supply-chain-method-update-so-on-cancel" if-module="axelor-supplychain">
		<call class="com.axelor.apps.supplychain.web.SaleOrderController" method="updateSaleOrderOnCancel"/>
	</action-method>
	
	<action-method name="action-supply-chain-method-update-po-on-cancel" if-module="axelor-supplychain">
		<call class="com.axelor.apps.supplychain.web.PurchaseOrderController" method="updatePurchaseOrderOnCancel"/>
	</action-method>
	
	<action-method name="action-print-stock-move">
		<call class="com.axelor.apps.stock.web.StockMoveController" method="printStockMove"/>
	</action-method>

	<action-method name="action-print-picking-stock-move">
		<call class="com.axelor.apps.stock.web.StockMoveController" method="printPickingStockMove"/>
	</action-method>
	
	<action-method name="action-stock-move-method-split-into-2">
		<call class="com.axelor.apps.stock.web.StockMoveController" method="splitInto2"/>
	</action-method>
	
	<action-method name="action-stock-move-method-split-stock-move-lines-special">
		<call class="com.axelor.apps.stock.web.StockMoveController" method="splitStockMoveLinesSpecial"/>
	</action-method>
	
	<action-method name="action-stock-move-method-split-stock-move-lines-unit">
		<call class="com.axelor.apps.stock.web.StockMoveController" method="splitStockMoveLinesUnit"/>
	</action-method>
	
	<action-method name="action-stock-move-ship-recieve-all-products">
	    <call class="com.axelor.apps.stock.web.StockMoveController" method="shipReciveAllProducts"/>
	</action-method>
	
	<action-method name="action-stock-move-method-generate-reversion">
	    <call class="com.axelor.apps.stock.web.StockMoveController" method="generateReversion"/>
	</action-method>
	
	<action-method name="action-stock-move-method-view-direction">
		<call class="com.axelor.apps.stock.web.StockMoveController" method="viewDirection"/>
	</action-method>
	
	<action-method name="action-stock-move-method-change-conformity">
		<call class="com.axelor.apps.stock.web.StockMoveController" method="changeConformityStockMove"/>
	</action-method>
	
	<action-method name="action-stock-move-line-method-change-conformity">
		<call class="com.axelor.apps.stock.web.StockMoveController" method="changeConformityStockMoveLine"/>
	</action-method>
	
	<action-method name="action-stock-move-method-open-stock-per-day">
		<call class="com.axelor.apps.stock.web.StockMoveController" method="openStockPerDay"/>
	</action-method>

	<action-method name="action-stock-move-method-set-addresses-str">
		<call class="com.axelor.apps.stock.web.StockMoveController" method="fillAddressesStr"/>
	</action-method>

	<action-validate name="action-stock-move-check-stock-move-line-real-qty">
		<alert message="The move doesn't contain any product, do you wish to continue ?" if="stockMoveLineList != null &amp;&amp; stockMoveLineList.sum{it->it.realQty} == 0"/>
	</action-validate>
	
	<action-validate name="action-stock-move-validate-address">
	    <error message="Both source location address and delivery (to) address are required to define the delivery itinerary" if="fromStockLocation?.address == null &amp;&amp; toAddress == null"/>
	    <error message="Please fill in the source (from) location address to get the delivery itinerary." if="fromStockLocation?.address == null"/>
	    <error message="Please fill in the delivery (to) address to get the delivery itinerary." if="toAddress == null"/>
	</action-validate>
	
	<action-validate name="action-stock-move-validate-shipment-informations">
		<error if="__config__.app.getApp('stock').isRequiredShipmentSupplierDetails &amp;&amp; (!supplierShipmentDate || !supplierShipmentRef)" message="Shipment Informations field must be filled to realize the stock move."/>
	</action-validate>

    <action-view name="action-stock-move-view-logistical-forms" title="Logistical forms"
        model="com.axelor.apps.stock.db.LogisticalForm">
        <view type="grid" name="logistical-form-stock-move-grid" />
        <view type="form" name="logistical-form-form" />
        <domain>self.id IN (:logisticalFormIdList)</domain>
        <context name="logisticalFormIdList" expr="call: com.axelor.apps.stock.service.LogisticalFormService:getIdList(__this__)" />
    </action-view>

	<search-filters name="customer-deliveries-filters" model="com.axelor.apps.stock.db.StockMove" title="Customer deliveries filters">
		<filter title="Deliveries to prepare">
			<domain>self.statusSelect = 2</domain>
		</filter>
		<filter title="Late Deliveries">
			<domain>self.estimatedDate &lt; CURRENT_DATE</domain>
		</filter>
		<filter title="Deliveries History">
			<domain>self.statusSelect = 3</domain>
		</filter>
		<filter title="Deliveries Cancelled">
			<domain>self.statusSelect = 4</domain>
		</filter>
	</search-filters>
	
	<search-filters name="supplier-arrivals-filters" model="com.axelor.apps.stock.db.StockMove" title="Supplier arrivals filters">
		<filter title="Today Arrivals">
			<domain>self.estimatedDate = CURRENT_DATE</domain>
		</filter>
		<filter title="Upcoming arrivals">
			<domain>self.estimatedDate &lt; :_newDate</domain>
		</filter>
		<filter title="Arrivals History">
			<domain>self.statusSelect = 3</domain>
		</filter>
		<filter title="Cancelled Arrivals">
			<domain>self.statusSelect = 4</domain>
		</filter>
	</search-filters>
	
	<search-filters name="internal-stock-move-filters" model="com.axelor.apps.stock.db.StockMove" title="Internal Stock Move filters">
		<filter title="Moves To Prepare">
			<domain>self.statusSelect = 2</domain>
		</filter>
		<filter title="Moves History">
			<domain>self.statusSelect = 3</domain>
		</filter>
		<filter title="Moves Cancelled">
			<domain>self.statusSelect = 4</domain>
		</filter>
	</search-filters>

	<action-view name="action.stock.move.view.cancel" title="Cancellation" model="com.axelor.apps.stock.db.StockMove">
		<view type="form" name="stock-move-cancel-wizard-form"/>
		<view-param name="popup" value="reload"/>
		<view-param name="show-toolbar" value="false"/>
		<view-param name="show-confirm" value="false" />
		<view-param name="popup-save" value="false"/>
		<view-param name="forceEdit" value="true" />
		<context name="_showRecord" expr="eval: __this__.id" />
		<context name="_xApplicationType" expr="eval: _model"/>
	</action-view>

	<form name="stock-move-cancel-wizard-form" model="com.axelor.apps.stock.db.StockMove" title="Cancellation confirmation" >
		<panel name="mainPanel">
			<field name="cancelReason" domain="self.applicationType = :_xApplicationType" colOffset="4" colSpan="4" widget="SuggestBox" canNew="false" canEdit="false"/>
			<button readonlyIf="cancelReason == null" name="cancelConfirmBtn" title="Confirm cancellation" onClick="action-stock-move-method-cancel" colOffset="4" colSpan="4"/>
		</panel>
	</form>

	<action-record name="action-stock-move-record-update-info-company" model="com.axelor.apps.stock.db.StockMove">
		<field name="tradingName" expr="eval: null" if="__config__.app.getApp('base').enableTradingNamesManagement"/>
		<field name="printingSettings" expr="eval: company?.printingSettings"/>
		<field name="isWithReturnSurplus" expr="eval:false" if="typeSelect != 3"/>
 		<field name="isWithBackorder" expr="eval:company?.stockConfig?.isWithBackorder"/>
	    <field name="isWithReturnSurplus" expr="eval:company?.stockConfig?.isWithReturnSurplus" if="typeSelect == 3"/>
	</action-record>

	<action-method name="action-stock-move-method-printing-settings-default-value">
		<call class="com.axelor.apps.stock.web.StockMoveController" method="fillDefaultPrintingSettings"/>
	</action-method>

	<action-method name="action-stock-move-method-filter-printing-settings">
		<call class="com.axelor.apps.stock.web.StockMoveController" method="filterPrintingSettings"/>
	</action-method>

	<action-method name="action-method-print-conformity-certificate">
		<call class="com.axelor.apps.stock.web.StockMoveController" method="printConformityCertificate"/>
	</action-method>

	<action-record name="action-stock-move-record-freight-carrier" model="com.axelor.apps.stock.db.StockMove">
		<field name="carrierPartner" expr="eval:freightCarrierMode?.carrierPartner"/>
	</action-record>
	
	<action-record name="action-stock-move-record-partner-shipment-informations" model="com.axelor.apps.stock.db.StockMove">
		<field name="shipmentMode" expr="eval: customerPartner?.shipmentMode"/>
    	<field name="freightCarrierMode" expr="eval: customerPartner?.freightCarrierMode"/>
		<field name="carrierPartner" expr="eval: customerPartner?.freightCarrierMode?.carrierPartner"/>
	</action-record>

</object-views>
